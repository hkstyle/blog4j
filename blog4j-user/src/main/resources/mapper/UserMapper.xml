<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blog4j.user.mapper.UserMapper">
    <resultMap type="com.blog4j.user.entity.UserEntity" id="BaseResultMap">
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="avatar" column="avatar"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="sign" column="sign"/>
        <result property="status" column="status"/>
        <result property="address" column="address"/>
        <result property="sex" column="sex"/>
        <result property="deleted" column="deleted"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!-- 批量保存用户信息 -->
    <insert id="batchInsert">
        insert into t_user (user_id, role_id, user_name,
                            password, avatar, phone, email,
                            status, address, sex, deleted,
                            last_login_time, update_time, create_time)
        values
        <foreach collection="userList" item="user" separator=",">
            (#{user.userId}, #{user.roleId}, #{user.userName}, #{user.password}, #{user.avatar},
             #{user.phone}, #{user.email}, #{user.status}, #{user.address}, #{user.sex},
             #{user.deleted}, #{user.lastLoginTime}, #{user.updateTime}, #{user.createTime})
        </foreach>
    </insert>

    <!-- 查询用户列表 -->
    <select id="userList" resultType="com.blog4j.user.vo.resp.UserListRespVo">
        select
            u.user_id as userId,
            u.user_name as userName,
            r.role_name as roleName,
            r.role_id as roleId,
            u.avatar as avatar,
            u.phone as phone,
            u.email as email,
            u.address as address,
            u.sex as sex,
            u.status as status,
            u.last_login_time as lastLoginTime,
            u.update_time as updateTime,
            u.create_time as createTime,
            o.organization_id as organizationId,
            o.organization_name as organizationName
        from t_user u
        left join t_role r on u.role_id = r.role_id
        left join t_organization_user_rel our on u.user_id = our.user_id
        left join t_organization o on o.organization_id = our.organization_id
        where u.deleted = false
        <if test=" userName != null and userName != '' ">
            and u.user_name like concat ('%', #{userName}, '%')
        </if>
        <if test=" organizationId != null and organizationId != '' ">
            and o.organization_id = #{organizationId}
        </if>
        <if test=" status != null and status > 0 ">
            and u.status = #{status}
        </if>
        order by u.create_time desc

    </select>


</mapper>